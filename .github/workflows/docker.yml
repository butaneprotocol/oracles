name: Publish Docker image

on:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "ubuntu-22.04"
            platforms: linux/amd64
          - os: "ubuntu-22.04-arm"
            platforms: linux/arm64
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@5138f76647652447004da686b2411557eaf65f33
          
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: sundaeswap/butane-oracle

      - name: Cargo Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            cargo-registry-cache
            sccache-cache
          key: ${{ runner.os }}-cargo-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-cache

      - name: inject cargo caches into docker
        uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de # v3.1.2
        with:
          cache-map: |
            {
              "cargo-registry-cache": "/usr/local/cargo/registry",
              "sccache-cache": "/sccache"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
